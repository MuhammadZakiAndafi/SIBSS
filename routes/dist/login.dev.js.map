{"version":3,"sources":["login.js"],"names":["express","require","bcrypt","mysql","router","Router","db","createConnection","host","user","password","database","connect","err","console","error","log","get","req","res","render","post","body","username","status","send","query","results","length","compare","isMatch","session","loggedin","redirect","module","exports"],"mappings":"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","sourcesContent":["const express = require('express')\r\nconst bcrypt = require('bcryptjs')\r\nconst mysql = require('mysql')\r\n\r\nconst router = express.Router()\r\n\r\n// Config to MySQL\r\nconst db = mysql.createConnection({\r\n  host: 'localhost',\r\n  user: 'root',\r\n  password: '',\r\n  database: 'sibss'\r\n})\r\n\r\n// connecting database\r\ndb.connect(err => {\r\n  if (err) {\r\n    console.error('Error connecting to MySQL:', err)\r\n    return\r\n  }\r\n  console.log('Connected to MySQL database')\r\n})\r\n\r\n// Endpoint login page\r\nrouter.get('/', (req, res) => {\r\n  res.render('login') // Pastikan ini merender file login.ejs\r\n})\r\n\r\n// Endpoint login\r\nrouter.post('/', (req, res) => {\r\n  const { username, password } = req.body\r\n\r\n  // Checking fof password and username\r\n  if (!username || !password) {\r\n    return res.status(400).send('Please provide username and password')\r\n  }\r\n\r\n  // Checking username\r\n  db.query(\r\n    'SELECT * FROM users WHERE username = ?',\r\n    [username],\r\n    (err, results) => {\r\n      if (err) {\r\n        console.error('Error in database query:', err)\r\n        return res\r\n          .status(500)\r\n          .send('An error occurred. Please try again later.')\r\n      }\r\n\r\n      // if false\r\n      if (results.length === 0) {\r\n        return res.status(401).send('Incorrect Username and/or Password!')\r\n      }\r\n\r\n      // Checking password\r\n      bcrypt.compare(password, results[0].password, (err, isMatch) => {\r\n        if (err) {\r\n          console.error('Error comparing passwords:', err)\r\n          return res\r\n            .status(500)\r\n            .send('An error occurred. Please try again later.')\r\n        }\r\n\r\n        if (isMatch) {\r\n          // Setting session variables\r\n          req.session.loggedin = true\r\n          req.session.username = username\r\n          console.log(req.session) // Logging session after successful login\r\n          // Redirect to dashboard after successful login\r\n          res.redirect('/dashboard')\r\n        } else {\r\n          res.status(401).send('Incorrect Username and/or Password!')\r\n        }\r\n      })\r\n    }\r\n  )\r\n})\r\n\r\nmodule.exports = router\r\n"],"file":"login.dev.js"}