{"version":3,"sources":["login.js"],"names":["express","require","bcrypt","mysql","session","Router","db","createConnection","host","user","password","database","err","console","error","log","router","get","req","res","render","_req$body","body","username","status","query","results","send","compare","isMatch","loggedin","redirect","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASD,QAAQ,YADjBD,QAAUC,QAAQ,mBAGlBE,MAAQF,QAAQ,SAFhBC,KAASD,QAAQ,QACjBG,OAAUH,QAAQI,SAOlBC,GAAKH,MAAMI,iBAAiB,CALlCC,KAAU,YAORC,KAAM,OALRC,SAAY,GAOVC,SAAU,UADVD,GAAAA,QAAQ,SAAAE,GACRD,EAGFE,QAAAC,MAAA,6BAAAF,GAEEC,QAAAE,IAAS,iCAQXC,OAAOC,IAAI,IAAK,SAACC,EAAKC,GAJpBN,EAAAA,OAAA,WAKAM,OAAIC,KAAJ,IAAW,SAAAF,EAASC,GAAA,IAAAE,EAGtBH,EAAAI,KAAAC,EAHsBF,EAGtBE,SAAAb,EAHsBW,EAGtBX,SAC+B,IAAAa,IACEL,EADF,OACrBK,EADqBC,OAAA,KACrBD,KAAAA,wCAINjB,GAAAmB,MAGF,yCAGE,CAACF,GACD,SAACX,EAAKc,GAHLD,OAAHb,GAIQA,QAAKE,MAAA,2BAAAF,GACCE,EACRU,OACGA,KAILG,KAAA,+CAEyBA,IAAvBD,EAAWF,OAGbL,EAAAK,OAAA,KAAAG,KAAA,4CAEEzB,OAAA0B,QAASlB,EAAAgB,EAAA,GAAAhB,SAAA,SAAAE,EAAAiB,GACPhB,GAAAA,EAID,OAHCA,QAAUC,MACPU,6BACKZ,GACTO,EAFIK,OAAO,KAIRK,KAAJ,8CAGMzB,GAEJc,EAAAd,QAAA0B,UAAA,EAFAZ,EAAId,QAAQmB,SAAWA,EAGvBJ,QAAIY,IAASb,EAAAd,SAEbe,EAAIK,SAAJ,eAhBJL,EAAAK,OAAA,KAAAG,KAAA,6CAuBNK,OAAOC,QAAUjB","file":"login.min.js","sourcesContent":["const express = require('express')\r\nconst bcrypt = require('bcryptjs')\r\nconst session = require('express-session')\r\nconst mysql = require('mysql')\r\nconst path = require('path')\r\n\r\nconst router = express.Router()\r\n\r\n// Config to MySQL\r\nconst db = mysql.createConnection({\r\n  host: 'localhost',\r\n  user: 'root',\r\n  password: '',\r\n  database: 'login'\r\n})\r\n\r\n// connecting database\r\ndb.connect(err => {\r\n  if (err) {\r\n    console.error('Error connecting to MySQL:', err)\r\n    return\r\n  }\r\n  console.log('Connected to MySQL database')\r\n})\r\n\r\n// Endpoint login page\r\nrouter.get('/', (req, res) => {\r\n  res.render('login') // Pastikan ini merender file login.ejs\r\n})\r\n\r\n// Endpoint login\r\nrouter.post('/', (req, res) => {\r\n  const { username, password } = req.body\r\n\r\n  // Checking fof password and username\r\n  if (!username || !password) {\r\n    return res.status(400).send('Please provide username and password')\r\n  }\r\n\r\n  // Checking username\r\n  db.query(\r\n    'SELECT * FROM users WHERE username = ?',\r\n    [username],\r\n    (err, results) => {\r\n      if (err) {\r\n        console.error('Error in database query:', err)\r\n        return res\r\n          .status(500)\r\n          .send('An error occurred. Please try again later.')\r\n      }\r\n\r\n      // if false\r\n      if (results.length === 0) {\r\n        return res.status(401).send('Incorrect Username and/or Password!')\r\n      }\r\n\r\n      // Checking password\r\n      bcrypt.compare(password, results[0].password, (err, isMatch) => {\r\n        if (err) {\r\n          console.error('Error comparing passwords:', err)\r\n          return res\r\n            .status(500)\r\n            .send('An error occurred. Please try again later.')\r\n        }\r\n\r\n        if (isMatch) {\r\n          // Setting session variables\r\n          req.session.loggedin = true\r\n          req.session.username = username\r\n          console.log(req.session) // Logging session after successful login\r\n          // Redirect to dashboard after successful login\r\n          res.redirect('/dashboard')\r\n        } else {\r\n          res.status(401).send('Incorrect Username and/or Password!')\r\n        }\r\n      })\r\n    }\r\n  )\r\n})\r\n\r\nmodule.exports = router\r\n"]}