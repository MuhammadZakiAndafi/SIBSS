{"version":3,"sources":["createSK.js"],"names":["PDFDocument","require","fs","promisify","db","exports","generate","req","res","generatePDF","userId","userlogin","userRole","pengajuan","sks","renderFile","regeneratorRuntime","async","_context2","prev","next","data","outputPath","html","doc","_context","awrap","__dirname","sent","createWriteStream","text","align","end","stop","user","id","role","Pengajuan","findOne","SuratKeputusan","findAll","where","pengajuanId","include","model","render","title","ejs","module","t0","console","error","status","send"],"mappings":"aAAA,IAAMA,YAAcC,QAAQ,UACtBC,GAAKD,QAAQ,MADbD,IAAAA,QAAcC,gBAGEA,QAAQ,QAAtBE,mBAAAA,UAFAC,GAAGH,QAAQ,aACnBI,QAASC,SAAW,SAApBC,EAAAC,GAAoB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EA0BbV,EAAA,SAAAY,EAAAC,GAAA,IAAAC,EAAAC,EAAA,OAAAR,mBAAAC,MAAA,SAAAQ,GAAA,OAAA,OAAAA,EAAAN,KAAAM,EAAAL,MAAA,KAAA,EAAA,OAAAK,EAAAL,KAAA,EAAAJ,mBAAAU,MACuBX,EAAWY,UAAY,sBAAuBN,IADrE,KAAA,EACUE,EADVE,EAAAG,MACUL,EAAAA,IADVvB,aAGUwB,KAAAA,GAHVK,kBAGgBP,IAGZE,EAAAA,KAAAA,EAAIM,CACAC,MAAAA,YAGJP,EAAIQ,MAVR,KAAA,EAAA,IAAA,MAAA,OAAAP,EAAAQ,WApBCvB,EALcT,EAAAA,QAAOiC,KAKKC,GAL1BhC,EAMcI,EANdJ,QAM0B+B,KACxBtB,EAAWD,EAAUyB,KARXlB,EAAAE,KAAA,EAAAJ,mBAAAU,MAUQtB,GAAGiC,UAAUC,QAAQ,CANjDjC,MAAQC,CAAAA,OAAWI,MAJC,KAAA,EAAA,OAUVG,EAVUK,EAAAU,KAAAV,EAAAE,KAAA,GAAAJ,mBAAAU,MAIDtB,GAAAmC,eAAAC,QAAA,CAAAC,MAAA,CAAAC,YAAA7B,EAAAsB,IAAAQ,QAAA,CAAA,CAAAC,MAAAxC,GAAAiC,eAJC,KAAA,GAIDvB,EAJCI,EAAAU,KAkBhBpB,EAAIqC,OAAO,YAAa,CAQNpC,IAAAA,EAAfqC,MAAA,kBAAAlC,SAAAA,IAAAG,EAAAZ,UAAA4C,IAAAhC,YAAAiC,OAAA3C,QAAAI,EA1BaS,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAA+B,GAAA/B,EAAA,MAAA,GA0BbgC,QAAAC,MAAA,wBAAAjC,EAAA+B,IAAAzC,EAAA4C,OAAA,KAAAC,KAAA,yBA1Ba,KAAA,GAAA,IAAA,MAAA,OAAAnC,EAAAe,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"createSK.min.js","sourcesContent":["const PDFDocument = require('pdfkit');\r\nconst fs = require('fs');\r\nconst ejs = require('ejs');\r\nconst { promisify } = require('util');\r\nconst db = require('../models');\r\n\r\nexports.generate = async (req, res) => {\r\n  try {\r\n  const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n    // Ambil pengajuan yang terhubung dengan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    });\r\n    const sks = await db.SuratKeputusan.findAll({\r\n      where: { pengajuanId: pengajuan.id },\r\n      include: [{model: db.Pengajuan}]\r\n    });\r\n\r\n    res.render('/template', {\r\n       sks,\r\n       title: 'Surat Keputusan',\r\n       userRole\r\n       });\r\n\r\n       const renderFile = promisify(ejs.renderFile);\r\n\r\n       async function generatePDF(data, outputPath) {\r\n           const html = await renderFile(__dirname + '/views/template.ejs', data);\r\n       \r\n           const doc = new PDFDocument();\r\n           doc.pipe(fs.createWriteStream(outputPath));\r\n       \r\n           doc.text(html, {\r\n               align: 'justify'\r\n           });\r\n       \r\n           doc.end();\r\n       }\r\n       \r\n       module.exports = generatePDF;\r\n} catch (error) {\r\nconsole.error('Error generating PDF:', error);\r\nres.status(500).send('Internal Server Error');\r\n}\r\n};\r\n"]}