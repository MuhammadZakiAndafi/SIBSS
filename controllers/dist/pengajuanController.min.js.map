{"version":3,"sources":["pengajuanController.js"],"names":["db","require","exports","showRegisBss","req","res","user","userlogin","userRole","regeneratorRuntime","async","_context","prev","next","awrap","User","findOne","id","session","sent","role","render","title","t0","where","stop","showPanduan","userId","pengajuan","dokumenPendukung","_context2","Pengajuan","abrupt","status","send","console","dokumen_pendukung","split","error","showStatus","approvals","_context3","Approval","findAll","pengajuanId","_req$body","nama_lengkap","nim","tanggal_lahir","jenis_kelamin","alamat","no_hp","departement","fakultas","kendala_bss","alasan_berhenti","permohonan","_context4","body","file","filename","create","log","redirect","json","showProfile","_context5"],"mappings":"aAAA,IAAMA,GAAKC,QAAQ,aAAnBC,QAAQC,aAAW,SAAnBC,EAAAC,GAAmB,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEId,GAAAe,KAAAC,QAAA,CAAOZ,MAAP,CAAAa,GAAAb,EAAAc,QAAAZ,KAAAW,OAFJ,KAAA,EAEXd,EAFWQ,EAAAQ,KAEIZ,EAAAH,EAAAc,QAAAZ,KAAAE,EAAAD,EAAAa,KAAAf,EAAAgB,OAAA,sBAAA,CAAAC,MAAA,kBAAAhB,KAAAA,EAAAE,SAAAA,IAFJG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,MAAA,GAIsBa,QAAAA,MAAK,uBAALA,EAAAA,IAASP,EAAAA,OAAAA,KAAIb,KAAIc,yBAJvC,KAAA,GAAA,IAAA,MAAA,OAAAP,EAAAc,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAEIvB,QAAAwB,YAAA,SAAAtB,EAAAC,GAAA,IAAAsB,EAAArB,EAAAE,EAAAoB,EAAAC,EAAA,OAAApB,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAlB,KAAA,EAGbL,EAHaH,EAGDA,QAAIc,KAAQZ,GACxBE,EAAAA,EAAWD,QAAAA,KAgBXC,EAAWF,EAAKc,KApBHU,EAAAjB,KAAA,EAAAJ,mBAAAK,MAKed,GAAA+B,UAAAf,QAAA,CAGhCR,MAAAA,CAAAA,OAAAA,MARiB,KAAA,EAAA,GAOjBF,EAPiBwB,EAAAX,KAAA,CAAAW,EAAAjB,KAAA,EAAA,MAAA,OAAAiB,EAAAE,OAAA,SA4BV3B,EAAI4B,OAAO,KAAKC,KAAK,mCA5BX,KAAA,EAWnBC,EAAcP,EAAAQ,kBAAdR,EAAAQ,kBAAAC,MAAA,KAAA,GAXmBhC,EAAAgB,OAAA,eAAA,CAAAC,MAAA,UAAAO,iBAAAA,EAAArB,SAAAA,IAAAsB,EAAAjB,KAAA,GAAA,MAAA,KAAA,GAAAiB,EAAAlB,KAAA,GAAAkB,EAAAP,GAAAO,EAAA,MAAA,GAAvBK,QAAAG,MAAA,uCAAAR,EAAAP,IA0CIlB,EAAI4B,OAAO,KAAKC,KAAK,yBA1CF,KAAA,GAAA,IAAA,MAAA,OAAAJ,EAAAL,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAgBDvB,QAAAqC,WAAA,SAAAnC,EAAAC,GAAA,IAAAsB,EAAApB,EAAAC,EAAAoB,EAAAY,EAAA,OAAA/B,mBAAAC,MAAA,SAAA+B,GAAA,OAAA,OAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,KAAA,EAAA,OAAA4B,EAAA7B,KAAA,EAAAe,EAAAvB,EAAAc,QAAAZ,KAAAW,GAEZU,EAAYvB,EAACc,QAAQZ,KAiCrBE,EAAWD,EAAUa,KAnCTqB,EAAA5B,KAAA,EAAAJ,mBAAAK,MAIIM,GAJJW,UAIUf,QAAA,CAE5BQ,MAAA,CAAAG,OAAAA,MANkB,KAAA,EAAA,GAIZnB,EAJYiC,EAAAtB,KAAA,CAAAsB,EAAA5B,KAAA,EAAA,MAAA,MAQhBW,IAAAA,MAAO,uBARS,KAAA,EAAA,OAAAiB,EAAA5B,KAAA,GAAAJ,mBAAAK,MA+CMd,GAAG0C,SAASC,QAAQ,CA/C1BnB,MAAA,CAAAoB,YAAAhB,EAAAX,IAOZW,QAAAA,CAAAA,CAAAA,MAPY5B,GAAA+B,eAAA,KAAA,GA+CZS,EA/CYC,EAAAtB,KAAAd,EAAAgB,OAAA,cAAA,CAAAC,MAAA,mBAuDhBhB,KAAMF,EAAIc,QAAQZ,KAvDFkC,UAAAA,EAyDhBhC,SAAAA,IAzDgBiC,EAAA5B,KAAA,GAAA,MAAA,KAAA,GAAA4B,EAAA7B,KAAA,GAAA6B,EAAAlB,GAAAkB,EAAA,MAAA,GAgBZZ,QAAAA,MAAAA,4BAAAA,EAAAA,IA6CNxB,EAAI4B,OAAO,KAAKC,KAAK,yBA7DH,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAhB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAsBhBjB,QAAAA,YAAAA,SAAAA,EAAAA,GAHyB,IAnBTA,EAmBlBJ,EAAAc,QAAAZ,KAnBkBc,KAAAf,EAAAgB,OAAA,wBAAA,CAqElBC,MAAO,mBArEWd,SAAAA,KA0BlBH,QAAAA,oBAAA,SAAqBD,EAAAC,GAArB,IAAAwC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnB,EAAAT,EAAA6B,EAAA,OAAA/C,mBAAAC,MAAA,SAAA+C,GAAA,OAAA,OAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,KAAA,EAAA,OAAA4C,EAAA7C,KAAA,EAAAiC,EA1BkBzC,EAAAsD,KAAAZ,EA0BlBD,EA1BkBC,aAAAC,EA0BlBF,EA1BkBE,IAAAC,EA0BlBH,EA1BkBG,cAAAC,EA0BlBJ,EA1BkBI,cAAAC,EA0BlBL,EA1BkBK,OAAAC,EA0BlBN,EA1BkBM,MAAAC,EA0BlBP,EA1BkBO,YAAAC,EA0BlBR,EA1BkBQ,SAAAC,EA0BlBT,EA1BkBS,YAAAC,EA0BlBV,EA1BkBU,gBAAtBnB,EAAA,KAmFQhC,EAAIuD,OArDZzD,EAAqBE,EAAAuD,KAAAC,UAAAjC,EAAAvB,EAAAc,QAAAZ,KAAAW,GAJjBwC,EAAA5C,KAAA,EAAAJ,mBAAAK,MAIiBd,GAAA+B,UAAA8B,OAAA,CAAAf,aAAAA,EAAAC,IAAAA,EAAAC,cAAAA,EAAAC,cAAAA,EAEjBC,OAAAA,EAAAC,MAAAA,EAAAC,YAAAA,EAAAC,SAAAA,EACM1B,YAAAA,EAASvB,gBAAAA,EAAiBa,kBAAAA,EAC1BV,OAAAA,KARN,KAAA,EAIiBiD,EAJjBC,EAAAtC,KAsEAgB,QAAQ2B,IAAI,8BAA+BN,GAlE1BnD,EAAA0D,SAAA,mBAJjBN,EAAA5C,KAAA,GAAA,MAAA,KAAA,GAAA4C,EAAA7C,KAAA,GAAA6C,EAAAlC,GAAAkC,EAAA,MAAA,GAaEjC,QAAAA,MAAK,6CAALA,EAAAA,IAASG,EAAAA,OAAAA,KAAMqC,KAAErC,CAAAA,QAAAA,gCAAAA,MAAAA,EAAAA,KAbnB,KAAA,GAAA,IAAA,MAAA,OAAA8B,EAAAhC,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAIiBvB,QAAA+D,YAAA,SAAA7D,EAAAC,GAAA,IAAAC,EAAA,OAAAG,mBAAAC,MAAA,SAAAwD,GAAA,OAAA,OAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,KAAA,EAAA,OAAAqD,EAAAtD,KAAA,EAAAsD,EAAArD,KAAA,EAAAJ,mBAAAK,MA4EEd,GAAGe,KAAKC,QAAQ,CAAEQ,MAAO,CAAEP,GAAIb,EAAIc,QAAQZ,KAAKW,OA5ElD,KAAA,EA4EXX,EA5EW4D,EAAA/C,KAAAd,EAAAgB,OAYZO,eAZY,CAAAtB,KAAAA,IAAA4D,EAAArD,KAAA,GAAA,MAAA,KAAA,EAAAqD,EAAAtD,KAAA,EAAAsD,EAAA3C,GAAA2C,EAAA,MAAA,GAAA/B,QAAAG,MAAA,uBAAA4B,EAAA3C,IAAAlB,EAAA4B,OAAA,KAAAC,KAAA,yBAAA,KAAA,GAAA,IAAA,MAAA,OAAAgC,EAAAzC,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"pengajuanController.min.js","sourcesContent":["const db = require('../models');\r\n\r\nexports.showRegisBss = async (req, res) => {\r\n  try {\r\n    const user = await db.User.findOne({ where: { id: req.session.user.id } });\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n    res.render('user/pendaftaranBSS', { \r\n      title: 'Pendaftaran BSS',\r\n      user: user,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching user:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showPanduan = async (req, res) => {\r\n  try {\r\n    const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n    const user = req.session.user; // Asumsikan req.user menyimpan informasi user yang sedang login\r\n    const userRole = user.role; // Mendapatkan role user\r\n\r\n    // Ambil pengajuan yang terhubung dengan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    });\r\n\r\n    if (!pengajuan) {\r\n      return res.status(404).send('Data pengajuan tidak ditemukan');\r\n    }\r\n\r\n    // Ambil dokumen_pendukung dari pengajuan\r\n    const dokumenPendukung = pengajuan.dokumen_pendukung ? pengajuan.dokumen_pendukung.split(',') : [];\r\n\r\n    // Render halaman panduan dengan data dokumenPendukung\r\n    res.render('user/panduan', {\r\n      title: 'Panduan',\r\n      dokumenPendukung: dokumenPendukung,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching supporting documents:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showStatus = async (req, res) => {\r\n  try {\r\n    // Ambil data pengguna yang sedang login\r\n    const userId = req.session.user.id;\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n\r\n    // Ambil pengajuanId dari model Pengajuan berdasarkan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    }); \r\n\r\n    if (!pengajuan) {\r\n      throw new Error('Pengajuan not found');\r\n    }\r\n\r\n    // Ambil data Approval berdasarkan pengajuanId\r\n    const approvals = await db.Approval.findAll({\r\n      where: { pengajuanId: pengajuan.id },\r\n      include: [{ model: db.Pengajuan }]\r\n    });\r\n\r\n    // Render halaman status dengan data approvals dan pengguna yang sedang login\r\n    res.render('user/status', {\r\n      title: 'Status Pengajuan',\r\n      user: req.session.user, // Data pengguna yang sedang login\r\n      approvals: approvals,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching approvals:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showRiwayat = (req, res) => {\r\n  const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n  res.render('user/riwayatpengajuan', { \r\n    title: 'riwayatpengajuan',\r\n    userRole\r\n   });\r\n};\r\n\r\nexports.createPermohonanBss = async (req, res) => {\r\n  try {\r\n    const {\r\n      nama_lengkap, nim, tanggal_lahir, jenis_kelamin,\r\n      alamat, no_hp, departement, fakultas,\r\n      kendala_bss, alasan_berhenti\r\n    } = req.body;\r\n\r\n    let dokumen_pendukung = null;\r\n    if (req.file) {\r\n      dokumen_pendukung = req.file.filename;\r\n    }\r\n\r\n    const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n\r\n    const permohonan = await db.Pengajuan.create({\r\n      nama_lengkap, nim, tanggal_lahir, jenis_kelamin,\r\n      alamat, no_hp, departement, fakultas,\r\n      kendala_bss, alasan_berhenti, dokumen_pendukung,\r\n      userId: userId // Pastikan nama kolom 'UserId' sesuai dengan definisi model Pengajuan\r\n    });\r\n\r\n    console.log('Permohonan berhasil dibuat:', permohonan);\r\n    res.redirect('/pendaftaranBss');\r\n  } catch (error) {\r\n    console.error('Terjadi kesalahan saat membuat permohonan:', error);\r\n    res.status(500).json({ message: 'Terjadi kesalahan pada server', error });\r\n  }\r\n};\r\n\r\nexports.showProfile = async (req, res) => {\r\n  try {\r\n    const user = await db.User.findOne({ where: { id: req.session.user.id } });\r\n    res.render('user/profile', { user: user });\r\n  } catch (error) {\r\n    console.error('Error fetching user:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n"]}