{"version":3,"sources":["pengajuanController.js"],"names":["db","require","exports","showRegisBss","req","res","user","userlogin","userRole","regeneratorRuntime","async","_context","prev","next","awrap","User","findOne","where","id","session","sent","role","render","title","t0","console","error","status","send","stop","showProfile","_res$render","userId","_context2","Pengajuan","Error","findAll","_defineProperty","showPanduan","pengajuan","dokumenPendukung","_context3","abrupt","dokumen_pendukung","split","showStatus","approvals","_context4","Approval","pengajuanId","showRiwayat","createPermohonanBss","_req$body","nama_lengkap","nim","tanggal_lahir","jenis_kelamin","alamat","no_hp","departement","fakultas","kendala_bss","alasan_berhenti","permohonan","_context5","body","file","filename","create","json","message"],"mappings":"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","file":"pengajuanController.min.js","sourcesContent":["const db = require('../models');\r\n\r\nexports.showRegisBss = async (req, res) => {\r\n  try {\r\n    const user = await db.User.findOne({ where: { id: req.session.user.id } });\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n    res.render('user/pendaftaranBSS', { \r\n      title: 'Pendaftaran BSS',\r\n      user: user,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching user:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showProfile = async (req, res) => {\r\n  try {\r\n    // Ambil data pengguna yang sedang login\r\n    const userId = req.session.user.id;\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n\r\n    // Ambil pengajuanId dari model Pengajuan berdasarkan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    }); \r\n\r\n    if (!pengajuan) {\r\n      throw new Error('Pengajuan not found');\r\n    }\r\n\r\n    // Ambil data Approval berdasarkan pengajuanId\r\n    const user = await db.User.findAll({\r\n      where: { userId: user.id },\r\n      include: [{ model: db.User }]\r\n    });\r\n\r\n    // Render halaman status dengan data approvals dan pengguna yang sedang login\r\n    res.render('user/profile', {\r\n      title: 'Profile',\r\n      user: req.session.user, // Data pengguna yang sedang login\r\n      user: user,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching approvals:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showPanduan = async (req, res) => {\r\n  try {\r\n    const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n    const user = req.session.user; // Asumsikan req.user menyimpan informasi user yang sedang login\r\n    const userRole = user.role; // Mendapatkan role user\r\n\r\n    // Ambil pengajuan yang terhubung dengan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    });\r\n\r\n    if (!pengajuan) {\r\n      return res.status(404).send('Data pengajuan tidak ditemukan');\r\n    }\r\n\r\n    // Ambil dokumen_pendukung dari pengajuan\r\n    const dokumenPendukung = pengajuan.dokumen_pendukung ? pengajuan.dokumen_pendukung.split(',') : [];\r\n\r\n    // Render halaman panduan dengan data dokumenPendukung\r\n    res.render('user/panduan', {\r\n      title: 'Panduan',\r\n      dokumenPendukung: dokumenPendukung,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching supporting documents:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showStatus = async (req, res) => {\r\n  try {\r\n    // Ambil data pengguna yang sedang login\r\n    const userId = req.session.user.id;\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n\r\n    // Ambil pengajuanId dari model Pengajuan berdasarkan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    }); \r\n\r\n    if (!pengajuan) {\r\n      throw new Error('Pengajuan not found');\r\n    }\r\n\r\n    // Ambil data Approval berdasarkan pengajuanId\r\n    const approvals = await db.Approval.findAll({\r\n      where: { pengajuanId: pengajuan.id },\r\n      include: [{ model: db.Pengajuan }]\r\n    });\r\n\r\n    // Render halaman status dengan data approvals dan pengguna yang sedang login\r\n    res.render('user/status', {\r\n      title: 'Status Pengajuan',\r\n      user: req.session.user, // Data pengguna yang sedang login\r\n      approvals: approvals,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching approvals:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showRiwayat = (req, res) => {\r\n  const userlogin = req.session.user;\r\n  const userRole = userlogin.role; // Mendapatkan role user\r\n  res.render('user/riwayatpengajuan', { \r\n    title: 'riwayatpengajuan',\r\n    userRole\r\n   });\r\n};\r\n\r\nexports.createPermohonanBss = async (req, res) => {\r\n  try {\r\n    const {\r\n      nama_lengkap, nim, tanggal_lahir, jenis_kelamin,\r\n      alamat, no_hp, departement, fakultas,\r\n      kendala_bss, alasan_berhenti\r\n    } = req.body;\r\n\r\n    let dokumen_pendukung = null;\r\n    if (req.file) {\r\n      dokumen_pendukung = req.file.filename;\r\n    }\r\n\r\n    const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n\r\n    const permohonan = await db.Pengajuan.create({\r\n      nama_lengkap, nim, tanggal_lahir, jenis_kelamin,\r\n      alamat, no_hp, departement, fakultas,\r\n      kendala_bss, alasan_berhenti, dokumen_pendukung,\r\n      userId: userId // Pastikan nama kolom 'UserId' sesuai dengan definisi model Pengajuan\r\n    });\r\n\r\n    console.log('Permohonan berhasil dibuat:', permohonan);\r\n    res.redirect('/pendaftaranBss');\r\n  } catch (error) {\r\n    console.error('Terjadi kesalahan saat membuat permohonan:', error);\r\n    res.status(500).json({ message: 'Terjadi kesalahan pada server', error });\r\n  }\r\n};\r\n"]}