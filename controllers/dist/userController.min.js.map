{"version":3,"sources":["userController.js"],"names":["bcrypt","require","db","exports","showLoginForm","req","res","render","title","_req$body","email","password","user","regeneratorRuntime","async","_context","prev","next","body","awrap","User","findOne","where","sent","t0","compare","login","redirect","status","send","t1","console","error","stop","register","_req$body2","nim","name","role","hashedPassword","_context2","hash","create","session","logout","destroy","err","clearCookie"],"mappings":"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","file":"userController.min.js","sourcesContent":["const bcrypt = require('bcryptjs');\r\nconst db = require('../models');\r\n\r\nexports.showLoginForm = (req, res) => {\r\n  res.render('auth/login', { title: 'Login' });\r\n};\r\n\r\nexports.login = async (req, res) => {\r\n  const { email, password } = req.body;\r\n  try {\r\n    const user = await db.User.findOne({ where: { email } });\r\n    if (user && await bcrypt.compare(password, user.password)) {\r\n      req.session.user = user;\r\n      res.redirect('/pendaftaranBss');\r\n    } else {\r\n      res.status(401).send('Invalid email or password');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showRegisterForm = (req, res) => {\r\n  res.render('auth/register', { title: 'Register' });\r\n};\r\n\r\nexports.register = async (req, res) => {\r\n  const { nim, name, email, password, role } = req.body;\r\n  try {\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n    const user = await db.User.create({ nim, name, email, password: hashedPassword, role });\r\n    req.session.user = user;\r\n    res.redirect('/login');\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(400).send('User already exists');\r\n  }\r\n};\r\n\r\nexports.logout = (req, res) => {\r\n  req.session.destroy(err => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).send('Error logging out');\r\n    }\r\n    res.clearCookie('connect.sid');\r\n    res.redirect('/login');\r\n  });\r\n};\r\n"]}