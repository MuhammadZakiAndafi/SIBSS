{"version":3,"sources":["userController.js"],"names":["bcrypt","require","db","exports","showLoginForm","req","res","title","login","_req$body","email","password","_user","regeneratorRuntime","async","_context","prev","next","awrap","User","findOne","where","user","sent","t0","compare","session","redirect","status","send","t1","console","error","stop","showRegisterForm","render","register","_req$body2","nim","name","role","hashedPassword","_user2","_context2","body","hash","create","logout","destroy","err","clearCookie","_defineProperty","_res$render","userRole","profile","userId","_user3","_context4","id","include","model"],"mappings":"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","file":"userController.min.js","sourcesContent":["const bcrypt = require('bcryptjs');\r\nconst db = require('../models');\r\n\r\nexports.showLoginForm = (req, res) => {\r\n  res.render('auth/login', { title: 'Login' });\r\n};\r\n\r\nexports.login = async (req, res) => {\r\n  const { email, password } = req.body;\r\n  try {\r\n    const user = await db.User.findOne({ where: { email } });\r\n    if (user && await bcrypt.compare(password, user.password)) {\r\n      req.session.user = user;\r\n      res.redirect('/pendaftaranBss');\r\n    } else {\r\n      res.status(401).send('Invalid email or password');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showRegisterForm = (req, res) => {\r\n  res.render('auth/register', { title: 'Register' });\r\n};\r\n\r\nexports.register = async (req, res) => {\r\n  const { nim, name, email, password, role } = req.body;\r\n  try {\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n    const user = await db.User.create({ nim, name, email, password: hashedPassword, role });\r\n    req.session.user = user;\r\n    res.redirect('/login');\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(400).send('User already exists');\r\n  }\r\n};\r\n\r\nexports.logout = (req, res) => {\r\n  req.session.destroy(err => {\r\n    if (err) {\r\n      console.error(err);\r\n      return res.status(500).send('Error logging out');\r\n    }\r\n    res.clearCookie('connect.sid');\r\n    res.redirect('/login');\r\n  });\r\n};\r\n\r\nexports.showProfile = async (req, res) => {\r\n  const userRole = userlogin.role; // Mendapatkan role user\r\n    // Render halaman status dengan data approvals dan pengguna yang sedang login\r\n    res.render('user/profile', {\r\n      title: 'Profile',\r\n      user: req.session.user, // Data pengguna yang sedang login\r\n      user: user,\r\n      userRole\r\n    });\r\n  };\r\n  \r\nexports.profile = async (req, res) => {\r\n   // Ambil data pengguna yang sedang login\r\n   const userId = req.session.user.id;\r\n\r\n   // Ambil pengajuanId dari model Pengajuan berdasarkan userId\r\n   try {\r\n    const user = await db.User.findOne({\r\n      where: { userId: userId },\r\n      include: [{ model: db.User }]\r\n    }); \r\n    req.session.user = user;\r\n    res.redirect('/profile');\r\n  }  catch (error) {\r\n    console.error('Error fetching approvals:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};"]}