{"version":3,"sources":["skController.js"],"names":["db","require","fs","path","PDFDocument","exports","showSk","req","res","userId","userlogin","userRole","pengajuan","sks","regeneratorRuntime","async","_context","prev","next","session","user","id","role","awrap","Pengajuan","findOne","where","sent","SuratKeputusan","findAll","pengajuanId","include","model","title","t0","send","stop","generateSK","doc","outputDir","filePath","output","_context2","params","flash","abrupt","redirect","join","__dirname","existsSync","mkdirSync","concat","status","createWriteStream","pipe","fontSize","text","moveDown","nomor","tanggal","toDateString","end","create","Date","keterangan","lampiran","console","error"],"mappings":"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","file":"skController.min.js","sourcesContent":["const db = require('../models');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst PDFDocument = require('pdfkit');\r\n\r\nexports.showSk = async (req, res) => {\r\n  try {\r\n    const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n    // Ambil pengajuan yang terhubung dengan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    });\r\n    const sks = await db.SuratKeputusan.findAll({\r\n      where: { pengajuanId: pengajuan.id },\r\n      include: [{model: db.Pengajuan}]\r\n    });\r\n\r\n    res.render('user/suratkeputusan', {\r\n       sks,\r\n       title: 'Surat Keputusan',\r\n       userRole\r\n       });\r\n  } catch (error) {\r\n    console.error('Error fetching surat keputusan:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.generateSK = async (req, res) => {\r\n  try {\r\n    const pengajuanId = req.params.id;\r\n    \r\n    // Fetch pengajuan details\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { id: pengajuanId },\r\n      include: [db.SuratKeputusan] // Include SK if needed\r\n    });\r\n\r\n    if (!pengajuan) {\r\n      req.flash('error', 'Pengajuan tidak ditemukan.');\r\n      return res.redirect('/daftarPengajuan');\r\n    }\r\n\r\n    // Create a new PDF document\r\n    const doc = new PDFDocument();\r\n\r\n    // Set up the output file path and create the directory if it doesn't exist\r\n    const outputDir = path.join(__dirname, '..', 'output');\r\n    if (!fs.existsSync(outputDir)) {\r\n      fs.mkdirSync(outputDir);\r\n    }\r\n    const filePath = path.join(outputDir, `sk_${pengajuanId}.pdf`);\r\n\r\n    // Pipe the PDF into a writable stream\r\n    const output = fs.createWriteStream(filePath);\r\n    doc.pipe(output);\r\n\r\n    // Build the content of the PDF dynamically based on pengajuan data\r\n    doc.fontSize(12);\r\n    doc.text(`Surat Keputusan`);\r\n    doc.moveDown();\r\n\r\n    // Insert content dynamically\r\n    if (pengajuan.SuratKeputusan) {\r\n      doc.text(`Nomor Surat: ${pengajuan.SuratKeputusan.nomor}`);\r\n      doc.text(`Tanggal: ${pengajuan.SuratKeputusan.tanggal.toDateString()}`);\r\n    } else {\r\n      doc.text(`Nomor Surat: -`);\r\n      doc.text(`Tanggal: -`);\r\n    }\r\n    // Add more content as needed\r\n\r\n    // Finalize the PDF and close the stream\r\n    doc.end();\r\n\r\n    // Save the SK to database\r\n    if (!pengajuan.SuratKeputusan) {\r\n      await db.SuratKeputusan.create({\r\n        pengajuanId: pengajuanId,\r\n        nomor: '',\r\n        tanggal: new Date(),\r\n        keterangan: '',\r\n        lampiran: '',\r\n        // Add more fields as needed\r\n      });\r\n    }\r\n\r\n    // Send a success response\r\n    res.status(201).send(`SK generated successfully and saved to ${filePath}`);\r\n\r\n  } catch (error) {\r\n    console.error('Error generating SK:', error);\r\n    req.flash('error', 'Failed to generate SK');\r\n    res.redirect('/daftarPengajuan');\r\n  }\r\n};"]}