{"version":3,"sources":["pengajuanController.js"],"names":["db","require","exports","showRegisBss","req","res","User","findOne","where","id","session","user","userlogin","userRole","role","render","title","console","error","status","send","showPanduan","userId","Pengajuan","pengajuan","dokumenPendukung","dokumen_pendukung","split","showStatus","Error","Approval","findAll","pengajuanId","include","model","approvals","showRiwayat","createPermohonanBss","body","nama_lengkap","nim","tanggal_lahir","jenis_kelamin","alamat","no_hp","departement","fakultas","kendala_bss","alasan_berhenti","file","filename","create","permohonan","log","redirect","json","message","showProfile"],"mappings":"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","sourcesContent":["const db = require('../models');\r\n\r\nexports.showRegisBss = async (req, res) => {\r\n  try {\r\n    const user = await db.User.findOne({ where: { id: req.session.user.id } });\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n    res.render('user/pendaftaranBSS', { \r\n      title: 'Pendaftaran BSS',\r\n      user: user,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching user:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showPanduan = async (req, res) => {\r\n  try {\r\n    const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n    const user = req.session.user; // Asumsikan req.user menyimpan informasi user yang sedang login\r\n    const userRole = user.role; // Mendapatkan role user\r\n\r\n    // Ambil pengajuan yang terhubung dengan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    });\r\n\r\n    if (!pengajuan) {\r\n      return res.status(404).send('Data pengajuan tidak ditemukan');\r\n    }\r\n\r\n    // Ambil dokumen_pendukung dari pengajuan\r\n    const dokumenPendukung = pengajuan.dokumen_pendukung ? pengajuan.dokumen_pendukung.split(',') : [];\r\n\r\n    // Render halaman panduan dengan data dokumenPendukung\r\n    res.render('user/panduan', {\r\n      title: 'Panduan',\r\n      dokumenPendukung: dokumenPendukung,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching supporting documents:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showStatus = async (req, res) => {\r\n  try {\r\n    // Ambil data pengguna yang sedang login\r\n    const userId = req.session.user.id;\r\n    const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n\r\n    // Ambil pengajuanId dari model Pengajuan berdasarkan userId\r\n    const pengajuan = await db.Pengajuan.findOne({\r\n      where: { userId: userId }\r\n    }); \r\n\r\n    if (!pengajuan) {\r\n      throw new Error('Pengajuan not found');\r\n    }\r\n\r\n    // Ambil data Approval berdasarkan pengajuanId\r\n    const approvals = await db.Approval.findAll({\r\n      where: { pengajuanId: pengajuan.id },\r\n      include: [{ model: db.Pengajuan }]\r\n    });\r\n\r\n    // Render halaman status dengan data approvals dan pengguna yang sedang login\r\n    res.render('user/status', {\r\n      title: 'Status Pengajuan',\r\n      user: req.session.user, // Data pengguna yang sedang login\r\n      approvals: approvals,\r\n      userRole\r\n    });\r\n  } catch (error) {\r\n    console.error('Error fetching approvals:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n\r\nexports.showRiwayat = (req, res) => {\r\n  const userlogin = req.session.user;\r\n    const userRole = userlogin.role; // Mendapatkan role user\r\n  res.render('user/riwayatpengajuan', { \r\n    title: 'riwayatpengajuan',\r\n    userRole\r\n   });\r\n};\r\n\r\nexports.createPermohonanBss = async (req, res) => {\r\n  try {\r\n    const {\r\n      nama_lengkap, nim, tanggal_lahir, jenis_kelamin,\r\n      alamat, no_hp, departement, fakultas,\r\n      kendala_bss, alasan_berhenti\r\n    } = req.body;\r\n\r\n    let dokumen_pendukung = null;\r\n    if (req.file) {\r\n      dokumen_pendukung = req.file.filename;\r\n    }\r\n\r\n    const userId = req.session.user.id; // Ambil userId dari pengguna yang sedang login\r\n\r\n    const permohonan = await db.Pengajuan.create({\r\n      nama_lengkap, nim, tanggal_lahir, jenis_kelamin,\r\n      alamat, no_hp, departement, fakultas,\r\n      kendala_bss, alasan_berhenti, dokumen_pendukung,\r\n      userId: userId // Pastikan nama kolom 'UserId' sesuai dengan definisi model Pengajuan\r\n    });\r\n\r\n    console.log('Permohonan berhasil dibuat:', permohonan);\r\n    res.redirect('/pendaftaranBss');\r\n  } catch (error) {\r\n    console.error('Terjadi kesalahan saat membuat permohonan:', error);\r\n    res.status(500).json({ message: 'Terjadi kesalahan pada server', error });\r\n  }\r\n};\r\n\r\nexports.showProfile = async (req, res) => {\r\n  try {\r\n    const user = await db.User.findOne({ where: { id: req.session.user.id } });\r\n    res.render('user/profile', { user: user });\r\n  } catch (error) {\r\n    console.error('Error fetching user:', error);\r\n    res.status(500).send('Internal Server Error');\r\n  }\r\n};\r\n"],"file":"pengajuanController.dev.js"}