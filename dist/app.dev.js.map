{"version":3,"sources":["app.js"],"names":["createError","require","express","path","cookieParser","logger","indexRouter","usersRouter","editRouter","loginRouter","dashboardRouter","profileRouter","app","set","join","__dirname","use","json","urlencoded","extended","req","res","next","err","locals","message","error","get","status","render","PORT","process","env","listen","console","log","on","module","exports"],"mappings":"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","sourcesContent":["var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar editRouter = require('./routes/editprofile');\r\nvar loginRouter = require('./routes/login');\r\nvar dashboardRouter = require('./routes/dashboard'); // Import route dashboard\r\nvar profileRouter = require('./routes/profile');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"./node_modules/preline/dist\")));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use('/editprofile', editRouter);\r\napp.use('/login', loginRouter);\r\napp.use('/dashboard', dashboardRouter);\r\napp.use('/profile', profileRouter);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\n// Set port and start server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n}).on('error', (err) => {\r\n  console.error(`Server failed to start due to error: ${err.message}`);\r\n});\r\n\r\nmodule.exports = app;"],"file":"app.dev.js"}