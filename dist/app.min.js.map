{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","usersRouter","loginRouter","logger","profileRouter","server","app","set","join","__dirname","dashboardRouter","use","json","extended","ubah_password","res","next","err","message","error","req","get","status","render","locals","env","console","log","concat","PORT","module","process"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,OAAOH,QAAQ,kBAKfI,YAAcJ,QAAQ,kBAJtBE,WAAYF,QAAGA,wBAMfK,YAAcL,QAAQ,kBALtBM,gBAAiBN,QAArB,sBAOIO,cAAgBP,QAAQ,oBALxBQ,cAAgBR,QAAC,0BACjBI,IAAAA,UAUJK,IAAIC,IAAI,QAASP,KAAKQ,KAAKC,UAAW,UARtCH,IAAIJ,IAAAA,cAAcL,OAClBS,IAAII,IAAAA,OAAAA,QAWJJ,IAAIK,IAAIb,QAAQc,QAVhBN,IAAIF,IAAAA,QAAAA,WAAuB,CAACS,UAAA,KAY5BP,IAAIK,IAAIZ,gBAXRO,IAAIQ,IAAAA,QAAAA,OAAgBjB,KAAQW,KAAAC,UAAA,iCAa5BH,IAAIK,IAAIb,QAAO,OAAQE,KAAKQ,KAAKC,UAAW,YAE5CH,IAAIK,IAAI,SAAUV,aAVlBK,IAAIC,IAAI,uBAAmBE,YAC3BH,IAAIC,IAAI,SAAAL,aAERI,IAAIK,IAAIR,aAARO,iBACAJ,IAAIK,IAAIb,WAAAM,eACRE,IAAIK,IAAIb,wBAAmBO,OAAAS,eAC3BR,IAAIK,IAAIZ,SAAAA,EAARgB,EAAAC,GACAV,EAAAV,YAAe,QAKfU,IAAIK,IAAI,SAARM,EAAkBf,EAAAA,EAAlBc,GAEAV,EAAIK,OAAIO,QAAYd,EAAAA,QACpBE,EAAIK,OAAIQ,MAAgCL,gBAAhCM,EAAAd,IAAAe,IAAyBhB,OAEjCY,EAAA,GAEED,EAAIM,OAAC1B,EAAAA,QAAL,KADFmB,EAIAQ,OAAA,WAGER,IAAIS,KAAON,QAAXO,IAAqBR,MAAIC,IACzBH,IAAAA,OAAIS,KAAOL,WAUXO,QAAQC,IAAR,yCAAAC,OAAqDC,SAPrDd,GAAIO,QAAOL,SAAGA,GACdF,QAAIQ,MAAJR,wCAAAA,OAAAE,EAAAC,YAIFY,OAAMD,QAAOE","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar server = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar editRouter = require('./routes/editprofile');\r\nvar loginRouter = require('./routes/login');\r\nvar dashboardRouter = require('./routes/dashboard');\r\nvar profileRouter = require('./routes/profile');\r\nvar ubah_password = require('./routes/ubah_password')\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"./node_modules/preline/dist\")));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/users', usersRouter);\r\napp.use('/profile/editprofile', editRouter);\r\napp.use('/login', loginRouter);\r\napp.use('/dashboard', dashboardRouter);\r\napp.use('/profile', profileRouter);\r\napp.use('/profile/ubahpassword', server.ubah_password )\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\n// Set port and start server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n}).on('error', (err) => {\r\n  console.error(`Server failed to start due to error: ${err.message}`);\r\n});\r\n\r\nmodule.exports = app;"]}