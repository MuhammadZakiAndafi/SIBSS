{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","usersRouter","logger","loginRouter","indexRouter","profileRouter","app","__dirname","set","use","json","urlencoded","extended","dashboardRouter","join","editRouter","req","res","next","message","err","error","get","status","process","env","listen","PORT","locals","console","concat","module","exports"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,YAAcH,QAAlB,kBAKII,YAAcJ,QAAQ,kBAHtBK,YADAH,YAAYF,QAAU,kBAMtBI,YAAcJ,QAAQ,kBALbA,QAAQ,yBAOjBM,YAAcN,QAAQ,kBALtBO,gBAAcP,QAAQ,sBAOtBQ,cAAgBR,QAAQ,oBAExBS,IAAMR,UANVQ,IAAIL,IAAAA,QAAWD,KAAGH,KAAQU,UAAA,UAU1BD,IAAIE,IAAI,cAAe,OAEvBF,IAAIG,IAAIP,OAAO,QAVfI,IAAIH,IAAAA,QAAWO,QAYfJ,IAAIG,IAAIX,QAAQa,WAAW,CAAEC,UAAU,KAXvCN,IAAIO,IAAAA,gBAaJP,IAAIG,IAAIX,QAAO,OAAQE,KAAKc,KAAKP,UAAW,iCAC5CD,IAAIG,IAAIX,QAAO,OAAQE,KAAKc,KAAKP,UAAW,YAE5CD,IAAIG,IAAI,IAAKL,aAbbE,IAAIA,IAAG,SAAUL,aAejBK,IAAIG,IAAI,eAAgBM,YAZxBT,IAAIE,IAAI,SAASR,aACjBM,IAAIE,IAAI,aAARK,iBAEAP,IAAIG,IAAIP,WAAMG,eAEeO,IAAAA,IAAAA,SAAUI,EAAAC,EAAAC,GAAvCA,EAAAtB,YAAA,QAKAU,IAAIG,IAAI,SAAKL,EAAAA,EAAba,EAAAC,GAEAZ,EAAIG,OAAIU,QAARC,EAAwBL,QACxBT,EAAIG,OAAIY,MAAR,gBAAkBlB,EAAAA,IAAlBmB,IAAA,OAAAF,EAAA,GAgBEH,EAAIM,OAAOH,EAAIG,QAAU,KAX3BjB,EAAIG,OAAI,WAKRH,IAAIG,KAAIe,QAAAC,IAAcT,MAAUE,IAC9BZ,IAAAoB,OAAAC,KAAA,WACAV,QAAIW,IAAJX,yCAAAA,OAAAU,SACAV,GAAIW,QAAOP,SAAAA,GAYXQ,QAAQR,MAAR,wCAAAS,OAAsDV,EAAID,YAP3DY,OAEDC,QAAA1B","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar editRouter = require('./routes/editprofile');\r\nvar loginRouter = require('./routes/login');\r\nvar dashboardRouter = require('./routes/dashboard'); // Import route dashboard\r\nvar profileRouter = require('./routes/profile');\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"./node_modules/preline/dist\")));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use('/editprofile', editRouter);\r\napp.use('/login', loginRouter);\r\napp.use('/dashboard', dashboardRouter);\r\napp.use('/profile', profileRouter);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\n// Set port and start server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n}).on('error', (err) => {\r\n  console.error(`Server failed to start due to error: ${err.message}`);\r\n});\r\n\r\nmodule.exports = app;"]}