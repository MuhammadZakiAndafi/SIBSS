{"version":3,"sources":["app.js"],"names":["createError","require","express","cookieParser","path","usersRouter","loginRouter","logger","profileRouter","indexRouter","app","set","join","__dirname","dashboardRouter","use","json","extended","ubah_password","res","next","err","req","editRouter","message","error","status","render","PORT","process","env","locals","on","module","exports"],"mappings":"aAAA,IAAIA,YAAcC,QAAQ,eACtBC,QAAUD,QAAQ,WADlBD,KAAAA,QAAcC,QAGdE,aAAeF,QAAQ,iBAFvBC,OAAOD,QAAU,UACjBG,YAAeH,QAAnB,kBAKII,YAAcJ,QAAQ,kBAJtBE,WAAYF,QAAGA,wBAMfK,YAAcL,QAAQ,kBALtBM,gBAAiBN,QAArB,sBAOIO,cAAgBP,QAAQ,oBALtBQ,cAAcR,QAAQ,0BACxBI,IAAAA,UAUJK,IAAIC,IAAI,QAASP,KAAKQ,KAAKC,UAAW,UARtCH,IAAIJ,IAAAA,cAAcL,OAClBS,IAAII,IAAAA,OAAAA,QAWJJ,IAAIK,IAAIb,QAAQc,QAVhBN,IAAIF,IAAAA,QAAAA,WAAuB,CAACS,UAAA,KAY5BP,IAAIK,IAAIZ,gBAXRO,IAAIQ,IAAAA,QAAAA,OAAgBjB,KAAQW,KAAAC,UAAA,iCAa5BH,IAAIK,IAAIb,QAAO,OAAQE,KAAKQ,KAAKC,UAAW,YAX5CH,IAAIA,IAAG,IAAGR,aAaVQ,IAAIK,IAAI,SAAUV,aAVlBK,IAAIC,IAAI,eAAcC,YACtBF,IAAIC,IAAI,SAAAL,aAERI,IAAIK,IAAIR,aAARO,iBACAJ,IAAIK,IAAIb,WAAAM,eACRE,IAAIK,IAAIb,iBAAAgB,eACRR,IAAIK,IAAIZ,SAAAA,EAARgB,EAAAC,GACAV,EAAAV,YAAe,QAIfU,IAAIK,IAAI,SAAAM,EAARC,EAAwBC,EAAAA,GAExBb,EAAIK,OAAIS,QAAcV,EAAAA,QACtBJ,EAAIK,OAAIU,MAAR,gBAAoBjB,EAAAA,IAAAA,IAApB,OAAAa,EAAA,GAIAX,EAAIK,OAAIM,EAAAK,QAAA,KACNN,EAAIO,OAAC3B,WAKL,IAAA4B,KAAAC,QAAAC,IAAAF,MAAA,IACAT,IAAAA,OAAIY,KAAOP,WACXL,QAAIY,IAAJZ,yCAAAA,OAA0CS,SAWzCI,GAAG,QAAS,SAACX,GARdF,QAAIO,MAAJP,wCAAAA,OAAAE,EAAAG,YAYFS,OAAOC,QAAUxB","file":"app.min.js","sourcesContent":["var createError = require('http-errors');\r\nvar express = require('express');\r\nvar path = require('path');\r\nvar cookieParser = require('cookie-parser');\r\nvar logger = require('morgan');\r\n\r\nconst indexRouter = require('./routes/index');\r\nvar usersRouter = require('./routes/users');\r\nvar editRouter = require('./routes/editprofile');\r\nvar loginRouter = require('./routes/login');\r\nvar dashboardRouter = require('./routes/dashboard');\r\nvar profileRouter = require('./routes/profile');\r\nvar ubah_password = require('./routes/ubah_password')\r\n\r\nvar app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'ejs');\r\n\r\napp.use(logger('dev'));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"./node_modules/preline/dist\")));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\napp.use('/', indexRouter);\r\napp.use('/users', usersRouter);\r\napp.use('/editprofile', editRouter);\r\napp.use('/login', loginRouter);\r\napp.use('/dashboard', dashboardRouter);\r\napp.use('/profile', profileRouter);\r\napp.use('/ubah_password', ubah_password )\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  next(createError(404));\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\n// Set port and start server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n}).on('error', (err) => {\r\n  console.error(`Server failed to start due to error: ${err.message}`);\r\n});\r\n\r\nmodule.exports = app;"]}